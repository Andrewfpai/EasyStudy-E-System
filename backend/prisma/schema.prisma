// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id             Int           @id @default(autoincrement())
  name           String
  hanziName      String?
  pinyinName     String?
  phoneNumber    String
  email          String        @unique
  address        String
  joinedDate     DateTime      @default(now())
  tokenUsed      Int           @default(0)
  tokenRemaining Int
  updatedAt      DateTime?     @updatedAt
  status         StudentStatus @default(ACTIVE)
  notes          String?

  // Relation to payment proofs
  payments          PaymentProof[]
  tokenUsageHistory TokenUsedDate[]
  tokenAddHistory   TokenAddedDate[]
}

model PaymentProof {
  id        Int      @id @default(autoincrement())
  studentId Int
  imageUrl  String // Supabase URL of the uploaded image
  createdAt DateTime @default(now())

  student Student @relation(fields: [studentId], references: [id])
}

model TokenUsedDate {
  id        Int      @id @default(autoincrement())
  studentId Int
  createdAt DateTime @default(now())

  student Student @relation(fields: [studentId], references: [id])
}

model TokenAddedDate {
  id        Int      @id @default(autoincrement())
  studentId Int
  createdAt DateTime @default(now())

  student Student @relation(fields: [studentId], references: [id])
}

enum StudentStatus {
  ACTIVE
  OUT
  TEMP_INACTIVE
}
